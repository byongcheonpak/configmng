zuul:
  host:
    connect-timeout-millis: 3000
    socket-timeout-millis: 3000
  routes:      
    config:
      path: /config/**
      url: ${uri_config:http://localhost:9001}
      stripPrefix: true
    webhook:
      path: /webhook/**
      service-id: webhook
      stripPrefix: true
    consumer:
      path: /consumer/**
      service-id: consumer
  retryable: true
  
  ribbon-isolation-strategy: thread
  thread-pool:
    use-separate-thread-pool: true
    thread-pool-key-prefix: zuul-
  
ribbon:
  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.AvailabilityFilteringRule
  NIWSServerListClassName: com.netflix.niws.loadbalancer.DiscoveryEnabledNIWSServerList 
  ServerListRefreshInterval: 60000
  NIWSServerListFilterClassName: com.netflix.loadbalancer.ServerListSubsetFilter

config:
  ribbon:
    DeploymentContextBasedVipAddresses: config # eureka 등록 이름
webhook:
  ribbon:
    DeploymentContextBasedVipAddresses: webhook # eureka 등록 이름
consumer:
  ribbon:
    ConnectTimeout: 1000 
    ReadTimeout: 1000      

hystrix:
  threadpool: 
    default:
      coreSize: 100               # thread core size: start
      maximumSize: 500            # thread core size: maximum
      keepAliveTimeMinutes: 1
      allowMaximumSizeToDivergeCoreSize: true 
    consumer:
      coreSize: 10
      maximumSize: 100
  command: 
    default: 
      execution: 
        isolation: 
          strategy: THREAD
          #thread: 
          #  timeoutInMiliseconds: 500  $ribbon과 같이 사용시 동작 안함(ribbon.ConnecTimeout과 ReadTimeout사용해야 함)
      metrics:
        rollingStats: 
          timeInMilliseconds: 10000   
      circuitBreaker: 
        enabled: true
        requestVolumeThreshold: 1      
        errorThresholdPercentage: 50   
        sleepWindowInMiliseconds: 5000 
---
spring:
  sleuth: 
    sampler:
      probability: 1.0
  zipkin:
    base-url: http://zipkin:9411
        
